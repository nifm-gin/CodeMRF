%%%%%%%%%%%%%%%%%%%%%%%%%%%%% toDo %%%%%%%%%%%%%%%%%%%%%%%%%%%%%
toDo.genProperties              = 1;
toDo.genSequence                = 1;
toDo.dispSeq                    = 1;
toDo.prepDico                   = 1;
toDo.computeDico                = 1;
toDo.dispVar                    = 1;
toDo.testRobustness             = 0;
toDo.savePropStruct             = 1;
toDo.saveSeqStruct              = 1;
toDo.exportSeqPV6               = 1;
toDo.saveDico                   = 1;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Pulse %%%%%%%%%%%%%%%%%%%%%%%%%%%%%
PulseProfile.PulseShape         = 'Calculated'; % Used only by Jan's code
PulseProfile.toLoad             = 'dico_Test_07_01_2020.mat';

%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Properties %%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%-------------- If New Properties --------------%
Properties.T1                   = [100:50:3000];                    % ms
Properties.T2                   = [10:10:500];                      % ms
Properties.df                   = [0];                              % Hz, can be negative, default = 0
Properties.B1rel                = [1.0];                            % Fraction, default = 1
Properties.vlist                = 0; % [-150 -100 -60 -40 -20 -10 -5 0 5 10 20 40 60 100 150]; % mm/s
Properties.toSave               = 'propTest';
%-------------- If Load Properties --------------%
Properties.toLoad               = 'struct_properties_AD_Test';

%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Sequence %%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%-------------- If New Sequence --------------%
Sequence.nPulses                = 1000; 
Sequence.spoilType              = 'bSSFP';                            % 'FID' = Spoiler after acq, 'Echo' = Spoiler before Acq, 'bSSFP' = no spoiler
Sequence.nLobes                 = 4;
Sequence.FAmin                  = [10,10,10,10];                 % Degree
Sequence.FAmax                  = [60,30,60,30];                 % Degree
Sequence.FAnoise                = 5;                                % Degree, noise = FAnoise*rand -FAnoise/2 
Sequence.lobeShape              = {"sin"};                          % {"cos", "sin", "triangle", "rampUp", "rampDown", "const", "rand"};
Sequence.skipTR                 = 10;                               % nb of TR that have FA=0 between lobes, can be 0;
Sequence.TR                     = [10.5, 14];                       % 1 element for constant, 2 elements for range, nPulses for pre-made vector
Sequence.TE                     = [];                              % 1 element for constant, 2 elements for range, nPulses for pre-made vector, empty for TR/2
Sequence.phases                 = 0;                                % 0: no alternance, 2: pi increments, 4: pi/2 increments  
Sequence.phaseIncrement         = 180;                                % Degree, phase increment on RF pulses
Sequence.phase                  = 'linear';                         % 'linear' or 'quadratic'
Sequence.Ncycles                = 4;                                % Dephasing cycles
Sequence.m0                     = [0, 0, -1];                       % No inversion, [0,0,-1] if inversion
Sequence.dispFlag               = 1;                                % 1 to plot seq time course
Sequence.toSave                 = 'seq_17-02-20'; 
%-------------- If Load Sequence --------------%
Sequence.toLoad                 = 'sequence_Test_07_01_2020_Calculated.mat';

%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Dico %%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Dico.saveName                   = 'DicoTest_19_02_2020';
Dico.method                     = 'EPG'; % 'EPG' or 'Bloch', Jan's code otherwise
%%%%%%%%%%%%%%%%%%%%%%%%%%%%% VarAff %%%%%%%%%%%%%%%%%%%%%%%%%%%%%
VariablesAff.T1aff              = 1500;      
VariablesAff.T2aff              = 100;
VariablesAff.dfaff              = 0;         
VariablesAff.vaff               = 0;
VariablesAff.B1relaff           = 1;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Robustness %%%%%%%%%%%%%%%%%%%%%%%%%%%%%
TestRobustnessToNoise.SNR       = 2; 